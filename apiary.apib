FORMAT: 1A
HOST: https://api.infusionsoft.com/crm

# Infusionsoft REST API
## Introduction
The Infusionsoft API enables third-party applications to communicate with Infusionsoft and process, update, and destroy data for a wide variety of uses. You can manage contacts, place orders, send messages, and most other things available for use in the Infusionsoft software.

### Helper Libraries
Infusionsoft officially supports the PHP library we created in-house. In addition, there are a number of third party helper libraries created by members of the community that may be useful to you. Many of these libraries are open source, so we encourage you to get into contact with their creators if you find bugs or have ideas for feature requests.

### Additional Languages
Additionally, we have created a number of sample files that implement the Infusionsoft API in many languages, including ASP, .Net, Java, Perl, PHP, Python, and Ruby. You can try those out for yourself by downloading all samples on [Github (zip, 2.5mb)](https://github.com/infusionsoft/API-Sample-Code/archive/master.zip)



## Getting Started With OAuth2
### Infusionsoft & OAuth 2.0

The Infusionsoft REST API uses a fairly standard implementation of OAuth 2.0 in order to provide authentication to all API endpoints. In the past, the Infusionsoft API has relied on a simple token based system; while those tokens will remain active until some date in the future, any new implementations will be required to use OAuth for all requests.

Rather than re-explain OAuth again, it is more useful to provide a series of documents that have already been created and demonstrate the OAuth protocol, how to implement it in your code, how to troubleshoot, and how to ease development. Before that, though, it is important to have the authorization destinations and necessary details.

### Getting Started
You can create and manage your new API keys to be used with OAuth here in the portal by visiting the [API Keys page](https://keys.developer.infusionsoft.com/apps/mykeys).

In order to properly make requests, you'll need to know the following URLs:

### Redirect URL
This callback url must be a registered URL in your application. We will not redirect users to any other URLs, so it is important this be properly setup before any authentication attempts.

Note: This url must use the HTTPS protocol with a valid certificate.

### Authorization Endpoint
https://signin.infusionsoft.com/app/oauth/authorize

### Token Endpoint
https://api.infusionsoft.com/token

### Final Request URL
Once you've received your access token, you can make XML-RPC requests at the following location:

https://api.infusionsoft.com/crm/xmlrpc/v1?access_token=ACCESSTOKEN 

### A Note on the API Key Field
In your final request to a method, you must still include the API key field in your XML-RPC request. This can be any value, so something such as your access token is perfectly appropriate.

### Resources

Check out the [Official OAuth2 website](http://oauth.net/2/) to learn more about the protocol and how it works.

Test out your requests in [IO Docs](https://developer.infusionsoft.com/io-docs) which will handle token negotiation for you.

Generate tokens with Runscope's fantastic [Token Generator](https://www.runscope.com/oauth2_tool?utm_source=infusionsoftdevportal&utm_medium=referral) and then use Runscope to assist in debugging your API requests within your application.

If you're using the Infusionsoft PHP library, you can start using a version of the [PHP SDK with OAuth](https://github.com/infusionsoft/infusionsoft-php).

## Data Formats
The body of the http calls and responses are represented in json.

### Dates
Dates are represented as "extended format combined date and time" as defined by [ISO 8601](http://www.w3.org/TR/NOTE-datetime).  (ex. YYYY-MM-DDThh:mm:ss.sssTZD) See [Joda Time](http://joda-time.sourceforge.net/cal_iso.html) for an in depth description.

# Group Tasks
With the Task endpoints you can search, create, put, patch and destroy tasks in Infusionsoft. 

**NOTE:**  You may only create tasks for the user you are authenticated as. 

## Task [/rest/v1/tasks/{id}]
A single Task object. 

The Task resource has the following attributes:

- id
- title
- description
- type
- priority
- due_date
- creation_date
- modification_date
- completion_date
- completed
- user_id

To save you from having to make an additional API call, we also return the following data about the contact associated with the task:

- id
- first_name
- last_name
- email

The attributes *id*, *date_created* and *modification_date* are assigned by the Infusionsoft API at the moment the task record is created. 


+ Parameters
    + id (string) ... ID of the Task.

+ Model (application/json)

    JSON representation of a Task Resource.

    + Body
            
            {
                "id":3,
                "title":"Birthday",
                "description":"Wrap presents",
                "type":"Other",
                "priority":2,
                "due_date":"2014-06-17T17:12:52.000Z",
                "creation_date":"2014-06-17T17:12:52.000Z",
                "modification_date":"2014-06-12T05:00:00.000Z",
                "completed":false,
                "completion_date":null,
                "user_id":1,
                "contact":{
                    "id":0,
                    "first_name":"John",
                    "last_name":"Smith",
                    "email":"john.smith@infusionsoft.com"
                }
                "url":"https://api.infusiontest.com/crm/rest/v1/tasks/3"
            }

### Retrieve a Single Task [GET]
To retrieve a single task simply submit a request to the task endpoint with the task *id*. 
+ Response 200

    [Task][]

### Replace a Task [PUT]
To replace an existing task send a JSON with one or more of the task resource attributes. Attribute values (states) from the previous version of this task will not be carried over. Any value not specified will be replaced with null.

+ Request (application/json)

        {
            "title": "Replaced title name",
            "type":"Other",
            "priority":2,
            "due_date":"2014-06-17T17:12:52.000Z",
            "completed":false,
            "completion_date":null,
            "user_id":1,
            "contact":{
                "id":1
            }
        }

+ Response 200

    [Task][]

### Update a Task [PATCH]
To update a task send a JSON with one or more updated values of the task resource attributes. All attribute values (states) from the previous version of this task are carried over by default if not included in the hash.

+ Request (application/json)

        {
            "title": "Updated title name"
        }

+ Response 200

    [Task][]

### Delete a Task [DELETE]
+ Response 201


## Tasks Collection [/rest/v1/tasks/search{?since,until,limit,offset,order,completed,has_due_date,user_id}]
The search endpoint returns 4 additional attributes along with an array of tasks:

- **count** - The number of tasks matching your search parameters.
- **next** - The URI for the next page of tasks. A null value means there is not a next page. 
- **previous** - The URI for the previous page of tasks. A null value means there is not a previous page. 
- **sync_token** - Token returned only on the last page of results. The *sync_token* can be passed to the *sync* endpoint to restrict the result set to only tasks updated, created, and deleted since the result set when the sync_token was returned.

+ Model (application/json)

    JSON representation of a Task Collection Resource.



    + Body

            {
                "tasks": [
                {
                    "id":3,
                    "title":"Birthday",
                    "description":"Wrap presents",
                    "type":"Other",
                    "priority":2,
                    "due_date":"2014-06-17T17:12:52.000Z",
                    "creation_date":"2014-06-17T17:12:52.000Z",
                    "modification_date":"2014-06-12T05:00:00.000Z",
                    "completion_date":null,
                    "completed":false,
                    "user_id": 1,
                    "contact":{
                        "id":0,
                        "first_name":"John",
                        "last_name":"Smith",
                        "email":"john.smith@someurl.com"
                    }
                    "url":"https://api.infusiontest.com/crm/rest/v1/tasks/3"
                }
                    {
                        "id":4,
                        "title":"Run around",
                        "description":"Don't carry scissors",
                        "type":"Other",
                        "priority":2,
                        "due_date":"2014-06-17T17:12:52.000Z",
                        "creation_date":"2014-06-17T17:12:52.000Z",
                        "modification_date":"2014-06-12T05:00:00.000Z",
                        "completion_date":null,
                        "completed":false,
                        "user_id":1,
                        "contact":{
                            "id":0,
                            "first_name":"Ammon",
                            "last_name":"Curtis",
                            "email":"ammon.curtis@someurl.com"
                        }
                        "url":"https://api.infusiontest.com/crm/rest/v1/tasks/3"
                    }
                ],
                "count": 2,
                "next": null,
                "previous": null,
                "sync_token": "MFDLJSDUiFiiuds"
            }
            
### Search for a Task [GET]
The Search endpoint returns an array of tasks matching the search parameters you supplied. All parameters are optional. If you make a call to the Search endpoint without passing the *since* or *until* paramenters, the endpoint will return all tasks for the authenticated user (past, present and future). If the optional parameters to not match any results, then an empty array will be returned.

+ Parameters
    + since (optional, dateTime, `2014-06-01T17:00:00.000Z`) ... Lower bound limit for the task expressed as a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    + until (optional, dateTime, `2014-08-31T17:00:00.000Z`) ... Upper bound limit for the task expressed as a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    + limit (optional, number, `100`) ... Specify the total number of results you would like returned per page. Limit 1,000.
    + offset (optional, number, `100`) ... Specify the number of records to offset the results by for paging.
    + order (optional, string, `priority`) ... Specify how the results of the search shall be ordered (in ascending order). Valid types to sort by include the following: type, priority, due_date. Furthermore, the results may be sorted in descending order if you place a dash ('-') before the value (e.g. "&order=-priority").
    + completed (optional, boolean, `true`) ... When set to true the results will containn only tasks that have been completed.  false will return only tasks that have not been completed.
    + has_due_date (optional, boolean, `true`) ... When set to true the results will contain only tasks with a due_date set.  false will return only tasks without a due_date.
    + user_id (optional, number, `45`) ... When used, the results will be filtered down to the user to is assigned the tasks.

+ Response 200

    [Tasks Collection][]    

## Tasks Creation [/rest/v1/tasks] 
### Create a Task [POST]
To create a task simply provide the JSON hash of the task, containing at least the fields *title* and *due_date*. All other attributes are optional. When you create a new task, the *contact.id* is automatically set to the id of the authenticated user making the request.
+ Request (application/json)

        {
            "title": "A new task title",
            "description": "We are doing something fun.",
            "due_date":"2014-06-17T17:12:52.000Z"
        }

+ Response 201 (application/json)

        [Task]

## Tasks Sync Collection [/rest/v1/tasks/sync{?sync_token,limit,offset}]
The sync endpoint returns 4 additional attributes along with an array of task statuses:

- **count** - The number of task statuses matching your search parameters
- **next** - The URI for the next page of task statuses. A null value means there is not a next page. 
- **previous** - The URI for the previous page of task statuses. A null value means there is not a previous page. 
- **sync_token** - Token returned only on the last page of results. Can be used in subsequent calls to the sync endpoint to restrict the result set to tasks that have been updated, created, and deleted since the result set when the sync_token was returned.

+ Model (application/json)

    JSON representation of a Task Status Collection Resource.

    + Headers

            Key: value

    + Body

            {
                "task_statuses": [
                    {
                        "status": "DELETED",
                        "task": {
                            "id": 586,
                            "title": "Really Cool task",
                            "description": "Description of Gist",
                            "type": "Other",
                            "priority": 1,
                            "completed": false,
                            "contact": null,
                            "url": "https://api.infusionsoft.com/crm/rest/v1/tasks/586",
                            "due_date": "2014-08-11T17:00:00.000Z",
                            "creation_date": "2014-07-07T17:58:34.000Z",
                            "modification_date": "2014-07-23T21:04:24.000Z",
                            "completion_date": null                        
                        }
                    },
                    {
                        "status": "CREATED",
                        "task": {
                            "id": 584,
                            "title": "Super Task",
                            "description": "Synch up",
                            "type": "Other",
                            "priority": 3,
                            "completed": false,
                            "contact": null,
                            "url": "https://api.infusiontest.com/crm/rest/v1/tasks/584",
                            "due_date": "2014-07-23T12:40:00.000Z",
                            "creation_date": "2014-07-23T21:02:06.000Z",
                            "modification_date": "2014-07-23T21:02:06.000Z",
                            "completion_date": null
                      }
                    }
                ],
                "count": 2,
                "next": null,
                "previous": null,
                "sync_token": "MFDLJSDUiFiiuds"
            }
            
### Sync for Tasks [GET]
The Sync endpoint returns an array of taskStatuses based on tasks updated, created, or deleted since the result set when the sync_token was returned.

+ Parameters
    + limit (optional, number, `100`) ... Specify the total number of results you would like returned per page. Limit 1,000.
    + offset (optional, number, `100`) ... Specify the number of records to offset the results by for paging.
    + sync_token (required, string, `MFDLJSDUiFiiuds=`) ... Specify the sync_token from the previous search or sync request to see all tasks updated, created, and deleted since the last request. A sync_token may expire, in which case the server will respond with 410 GONE and the client should perform a full synchronization by searching all tasks. Can only be used in conjuction with limit and offset parameters.
+ Response 200

    [Tasks Sync Collection][]   



# Group Appointments
With the Appointment endpoints you can search, create, put, patch and destroy appointments in Infusionsoft. 
**NOTE:**  You may only create appointments for the user you are authenticated as. 

## Appointment [/rest/v1/appointments/{id}]
A single Appointment object. 

The Appointment resource has the following attributes:

- id
- title
- description
- creation_date
- modification_date
- start_date
- end_date
- remind_time
- location
- url
- recurrence[]
- recurring_appointment_id

The attributes *id*, *recurrence_id*, *date_created*, *modification_date* and *last_updated* are assigned by the Infusionsoft API at the moment the appointment record is created. 

The *recurring_appointment_id* will be shared by all instances of a recurring appointment and will otherwise be null.

*recurrence* is a list of RRULE, EXRULE, RDATE, EXDATE strings (as defined in the [iCalendar spec](https://www.ietf.org/rfc/rfc2445.txt) ).

+ Parameters
    + id (string) ... ID of the Appointment.

+ Model (application/json)

    JSON representation of an Appointment Resource.


    + Body

            {
                "id": 42,
                "title": "Really Cool Appointment",
                "description": "Description of Gist",
                "creation_date": "2014-07-07T17:58:34.000Z",
                "modification_date": "2014-07-07T17:58:34.000Z",
                "start_date": "2014-07-10T17:00:00.000Z",
                "end_date": "2014-07-10T18:00:00.000Z",
                "remind_time": 15,
                "location": "Starbucks",
                "url": "https://api.infusionsoft.com/crm/rest/v1/appointments/3",
                "recurrence":null,
                "recurring_appointment_id":null
            }

### Retrieve a Single Appointment [GET]
To retrieve a single appoointment simply submit a request to the appointment endpoint with the appointment *id*. 

+ Response 200

    [Appointment][]

### Replace an Appointment [PUT]
To replace an existing appointment send a JSON with one or more of an appointment resource attributes. Attribute values (states) from the previous version of this appointment will not be carried over. Any value not specified will be replaced with null.

When replacing a recurring appointment, all instances of the series are replaced, including exceptions.

+ Request (application/json)

        {
            "title": "Replaced title name",
            "start_date": "2014-07-10T17:00:00.000Z",
            "end_date": "2014-07-10T18:00:00.000Z"
        }

+ Response 200

    [Appointment][]

### Update an Appointment [PATCH]
To update an appointment send a JSON with one or more updated values of the task resource attributes. All attribute values (states) from the previous version of this task are carried over by default if not included in the hash.

When updating a recurring appointment's recurrance field, all previous exceptions to the recurrance are removed.  When updating any other field on a recurring appointment, that change will be reflected in all appointments in the series, including exception appointments.
+ Request (application/json)

        {
            "title": "Updated title name"
        }

+ Response 200

    [Appointment][]

### Delete an Appointment [DELETE]
When deleting a recurring appointment, all exceptions to the recurrence are also deleted.

+ Response 201

## Appointments Collection [/rest/v1/appointments/search{?since,until,limit,offset,expand_recurring_appointments}]
The search endpoint returns 4 additional attributes along with an array of appointments:

- **count** - The number of appointments matching your search parameters
- **next** - The URI for the next page of appointments. A null value means there is not a next page. 
- **previous** - The URI for the previous page of appointments. A null value means there is not a previous page. 
- **sync_token** - Token returned only on the last page of results. The *sync_token* can be passed to the *sync* endpoint to restrict the result set to only appointments updated, created, and deleted since the result set when the sync_token was returned.

+ Model (application/json)

    JSON representation of an Appointment Collection Resource.

    + Headers

            Key: value

    + Body

            {
                "appointments": [
                    {
                        "id": "3",
                        "title": "Really Cool Appointment",
                        "description": "Description of Gist",
                        "creation_date": "2014-07-07T17:58:34.000Z",
                        "start_date": "2014-07-10T17:00:00.000Z",
                        "end_date": "2014-07-10T18:00:00.000Z",
                        "remind_time": "15",
                        "location": "Starbucks",
                        "url": "https://api.infusionsoft.com/crm/rest/v1/appointments/3"
                        "recurrence":[
                            "EXDATE:19960402T010000Z,19960403T010000Z,19960404T010000Z",
                            "RRULE:FREQ=DAILY;INTERVAL=2"
                        ],
                        "recurring_appointment_id":3
                    },
                    {
                        "id": "4",
                        "title": "Another Really Cool Appointment",
                        "description": "Description of something cool",
                        "creation_date": "2014-07-07T17:58:34.000Z",
                        "start_date": "2014-07-10T17:00:00.000Z",
                        "end_date": "2014-07-10T18:00:00.000Z",
                        "remind_time": "15",
                        "location": "Peter Piper Pizza",
                        "url": "https://api.infusionsoft.com/crm/rest/v1/appointments/4"
                        "recurrence":null,
                        "recurring_appointment_id":3
                    }
                ],
                "count": 2,
                "next": null,
                "previous": null,
                "sync_token": "MFDLJSDUiFiiuds"
            }
            
### Search for Appointments [GET]
The Search endpoint returns an array of appointments and recurring appointments matching the search parameters you supplied. All parameters are optional. If your make a call to the search endpoint without passing the *since* or *until* paramenters the endpoint will return all appointments for the authenticated user (past, present and future). 

A recurring appointment is returned if it contains at least one appointment in the series which falls within the search parameters.  Any exception appointments that fit the search criteria are also returned.
+ Parameters
    + since (optional, dateTime, `2014-06-01T17:00:00.000Z`) ... Lower bound limit for the appointment expressed as a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    + until (optional, dateTime, `2014-08-31T17:00:00.000Z`) ... Upper bound limit for the appointment expressed as a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    + limit (optional, number, `100`) ... Specify the total number of results you would like returned per page. Limit 1,000.
    + offset (optional, number, `100`) ... Specify the number of records to offset the results by for paging.
    + expand_recurring_appointments (optional, boolean, `false`) ... When enabled, individual members of a series of a recurring appointment are returned in place of the recurring appointment. As we cannot return an infinite number of appointments, *until* is required when expanding recurring appointments.
+ Response 200

    [Appointments Collection][]    
  

## Appointments Creation [/rest/v1/appointments] 
### Create an Appointment[POST]
To create an appointment simply provide the JSON hash of the appointment, containing at least the fields *title*, *start_date*, and *end_date*. All other attributes are optional. When you create a new task, the *user_id* is automattically set to the *userId* of the authenticated user making the request.

+ Request (application/json)

        {
            "title": "A new Appt title",
            "description": "We are doing something fun.",
            "start_date": "2014-07-10T17:00:00.000Z",
            "end_date": "2014-07-10T18:00:00.000Z",
            "remind_time": "15",
            "location": "McDonalds"
        }

+ Response 201 (application/json)

        [Appointment]

## Appointments Sync Collection [/rest/v1/appointments/sync{?sync_token,limit,offset}]
The sync endpoint returns 4 additional attributes along with an array of appointment statuses:

- **count** - The number of appointment statuses matching your search parameters
- **next** - The URI for the next page of appointment statuses. A null value means there is not a next page. 
- **previous** - The URI for the previous page of appointment statuses. A null value means there is not a previous page. 
- **sync_token** - Token returned only on the last page of results. Can be used in subsequent calls to the sync endpoint to restrict the result set to appointments that have been updated, created, and deleted since the result set when the sync_token was returned.

+ Model (application/json)

    JSON representation of an Appointment Status Collection Resource.

    + Headers

            Key: value

    + Body

            {
                "appointment_statuses": [
                    {
                        "status": "DELETED",
                        "appointment": {
                            "id": "3",
                            "title": "Really Cool Appointment",
                            "description": "Description of Gist",
                            "creation_date": "2014-07-07T17:58:34.000Z",
                            "start_date": "2014-07-10T17:00:00.000Z",
                            "end_date": "2014-07-10T18:00:00.000Z",
                            "remind_time": "15",
                            "location": "Starbucks",
                            "url": "https://api.infusionsoft.com/crm/rest/v1/appointments/3"
                        }
                    },
                    {
                        "status": "CREATED",
                        "appointment": {
                            "id": "4",
                            "title": "Another Really Cool Appointment",
                            "description": "Description of something cool",
                            "creation_date": "2014-07-07T17:58:34.000Z",
                            "start_date": "2014-07-10T17:00:00.000Z",
                            "end_date": "2014-07-10T18:00:00.000Z",
                            "remind_time": "15",
                            "location": "Peter Piper Pizza",
                            "url": "https://api.infusionsoft.com/crm/rest/v1/appointments/4"
                        }
                    }
                ],
                "count": 2,
                "next": null,
                "previous": null,
                "sync_token": "MFDLJSDUiFiiuds"
            }
            
### Sync for Appointments [GET]
The Sync endpoint returns an array of appointmentStatuses based on appointments updated, created, or deleted since the result set when the sync_token was returned.

Any changes to a recurring appointment, including removing and adding exceptions to the recurrance are considered updates.
+ Parameters
    + limit (optional, number, `100`) ... Specify the total number of results you would like returned per page. Limit 1,000.
    + offset (optional, number, `100`) ... Specify the number of records to offset the results by for paging.
    + sync_token (required, string, `MFDLJSDUiFiiuds=`) ... Specify the sync_token from the previous search or sync request to see all appointments updated, created, and deleted since the last request. A sync_token may expire, in which case the server will respond with 410 GONE and the client should perform a full synchronization by searching all appointments. Can only be used in conjuction with limit and offset parameters.
+ Response 200

    [Appointments Sync Collection][]   

# Group Orders


## Order [/rest/v1/orders/{id}]
An order is comprised of the following attributes. To reduce the number of API calls you need to make we also return the following embedded resources:
* contact
* order_items
* products


### `order` resource
| attribute | type | Description 
| --- | --- | --- 
| `id` | number | `{ "id": 42 }` <br>  
| `title` | string | `{ "title":"Email Testing Order (10/9/2013)" }` <br> 
| `status` | string | `{ "status":"UNPAID" }` <br> 
| `recurring` | bool | `{ "recurring":false }` <br> 
| `total` | number | `{ "total":500.0 }` <br> 
| `contact` | embedded object | See the Contact resource definition below. 
| `creation_date` | datetime | `{ "creation_date":"2013-10-09T16:15:24.000-07:00" }` <br> 
| `modification_date` | datetime | `{ "modification_date":"2013-12-12T10:30:48.000-07:00" }` <br> 
| `lead_affiliate_id` | number | `{ "lead_affiliate_id":0 }` <br> 
| `sales_affiliate_id` | number | `{ "sales_affiliate_id":0 }` <br> 
| `total_paid` | number | `{ "total_paid":360.0 }` <br> 
| `total_due` | datetime | `{ "total_due":500.0 }` <br> 
| `order_items` | embedded object | See the order_items resource representation below.

### `order_items` resource

| attribute | type | Description 
| --- | --- | --- 
| `id` | number | `{ "id":1 }` <br> 
| `name` | string | `{ "name":"Baby Monkey" }` <br> 
| `description` | string | `{ "description":"" }` <br> 
| `type` | string | `{ "type":"Product" }` <br> 
| `notes` | string | `{ "notes":null }` <br> 
| `quantity` | number | `{ "quantity":1 }` <br> 
| `cost` | number | `{ "cost":0.0 }` <br>  
| `price` | number | `{ "price":100.0 }` <br> 
| `discount` | number | `{ "discount":null }` <br> 

### `product` resource

| attribute | type | Description 
| --- | --- | --- 
| `id` | number | ` { "id":1 }` <br>
| `name` | string | ` { "name":"Baby Monkey" }` <br>
| `sku` | string | ` { "sku":"" }` <br>
| `description` | string | ` { "description":"Batteries not included." }` <br>
| `shippable` | bool | ` { "shippable":false }` <br>
| `taxable` | bool | ` { "taxable":false }` <br>

+ Parameters
    + id (string) ... ID of the Order.

+ Model (application/json)

    JSON representation of an Order Resource.


    + Body
            
            {
                "id": 1288,
                "title": "Email Testing Order (10/9/2013)",
                "status": "UNPAID",
                "recurring": null,
                "total": 500,
                "contact": {
                    "id": 3,
                    "email": "victor.miller@infusionsoft.com",
                    "first_name": "Email",
                    "last_name": "Testing"
                },
                "creation_date": "2013-10-09T16:15:24.000-07:00",
                "modification_date": "2013-12-12T10:30:48.000-07:00",
                "lead_affiliate_id": 0,
                "sales_affiliate_id": 0,
                "total_paid": 360,
                "total_due": 500,
                "order_items": [
                    {
                        "id": 31,
                        "name": "Howling Monkey",
                        "description": "",
                        "type": "Product",
                        "notes": null,
                        "quantity": 1,
                        "cost": 0,
                        "price": 100,
                        "discount": null,
                        "product": {
                            "id": 1,
                            "name": "Howling Monkey",
                            "sku": "",
                            "description": "",
                            "shippable": false,
                            "taxable": false
                        }
                    },
                    {
                        "id": 5130,
                        "name": "Baby Monkey",
                        "description": "",
                        "type": "Product",
                        "notes": "",
                        "quantity": 1,
                        "cost": 0,
                        "price": 100,
                        "discount": null,
                        "product": {
                            "id": 1,
                            "name": "Baby Monkey",
                            "sku": "",
                            "description": "",
                            "shippable": false,
                            "taxable": false
                        }
                    }
                ],
                "url": "https://api.infusionsoft.com/crm/rest/v1/orders/1288"
            }

### Retrieve a Single Order [GET]
To retrieve a single order simply submit a request to the order endpoint with the order *id*. 
+ Response 200

    [Order][]


## Orders Collection [/rest/v1/orders{?since,until,limit,offset,contact_id,product_id}]
The search endpoint returns 3 additional attributes along with an array of notes:

- **count** - The number of notes matching your search parameters
- **next** - The URI for the next page of notes. A null value means there is not a next page. 
- **previous** - The URI for the previous page of notes. A null value means there is not a previous page. 
- **sync_token** - Token returned only on the last page of results. The *sync_token* can be passed to the *sync* endpoint to restrict the result set to only tasks updated, created, and deleted since the result set when the sync_token was returned.

+ Model (application/json)

    JSON representation of an Order Collection Resource.


    + Body

            {
                "orders": [
                    {
                        "id": 1288,
                        "title": "Email Testing Order (10/9/2013)",
                        "status": "UNPAID",
                        "recurring": null,
                        "total": 500,
                        "contact": {
                            "id": 3,
                            "email": "victor.miller@infusionsoft.com",
                            "first_name": "Email",
                            "last_name": "Testing",
                            "company_name": "IBN",
                            "job_title": "Chief Go-Go Dancer"
                        },
                        "creation_date": "2013-10-09T16:15:24.000-07:00",
                        "modification_date": "2013-12-12T10:30:48.000-07:00",
                        "lead_affiliate_id": 0,
                        "sales_affiliate_id": 0,
                        "total_paid": 360,
                        "total_due": 500,
                        "order_items": [
                            {
                                "id": 31,
                                "name": "Howling Monkey",
                                "description": "",
                                "type": "Product",
                                "notes": null,
                                "quantity": 1,
                                "cost": 0,
                                "price": 100,
                                "discount": null,
                                "product": {
                                    "id": 1,
                                    "name": "Howling Monkey",
                                    "sku": "",
                                    "description": "",
                                    "shippable": false,
                                    "taxable": false
                                }
                            },
                            {
                                "id": 5130,
                                "name": "Baby Monkey",
                                "description": "",
                                "type": "Product",
                                "notes": "",
                                "quantity": 1,
                                "cost": 0,
                                "price": 100,
                                "discount": null,
                                "product": {
                                    "id": 1,
                                    "name": "Baby Monkey",
                                    "sku": "",
                                    "description": "",
                                    "shippable": false,
                                    "taxable": false
                                }
                            }
                        ],
                        "url": "https://api.infusionsoft.com/crm/rest/v1/orders/1288"
                    },
                    {
                        "id": 1548,
                        "title": "Email Testing Order (10/9/2013)",
                        "status": "UNPAID",
                        "recurring": null,
                        "total": 500,
                        "contact": {
                            "id": 3,
                            "email": "victor.miller@infusionsoft.com",
                            "first_name": "Email",
                            "last_name": "Testing"
                            "company_name": "IBN",
                            "job_title": "Chief Go-Go Dancer"
                        },
                        "creation_date": "2013-10-09T16:15:24.000-07:00",
                        "modification_date": "2013-12-12T10:30:48.000-07:00",
                        "lead_affiliate_id": 0,
                        "sales_affiliate_id": 0,
                        "total_paid": 360,
                        "total_due": 500,
                        "order_items": [
                            {
                                "id": 145,
                                "name": "Spider Monkey",
                                "description": "",
                                "type": "Product",
                                "notes": null,
                                "quantity": 1,
                                "cost": 0,
                                "price": 100,
                                "discount": null,
                                "product": {
                                    "id": 1,
                                    "name": "Spider Monkey",
                                    "sku": "",
                                    "description": "",
                                    "shippable": false,
                                    "taxable": false
                                }
                            },
                            {
                                "id": 1340,
                                "name": "Sock Monkey",
                                "description": "",
                                "type": "Product",
                                "notes": "",
                                "quantity": 1,
                                "cost": 0,
                                "price": 100,
                                "discount": null,
                                "product": {
                                    "id": 1,
                                    "name": "Sock Monkey",
                                    "sku": "",
                                    "description": "",
                                    "shippable": false,
                                    "taxable": false
                                }
                            }
                        ],
                        "url": "https://api.infusionsoft.com/crm/rest/v1/orders/1548"
                    }
                ],
                "count": 2,
                "next": null,
                "previous": null
                "sync_token": "MFDLJSDUiFiiuds"
            }
            
### List all Orders [GET]
The Search endpoint returns an array of orders matching the search parameters you supplied. All parameters are optional. If your make a call to the search endpoint without passing the *since* or *until* paramenters the endpoint will return all orders.

+ Parameters
    + since (optional, dateTime, `2014-06-01T17:00:00.000Z`) ... Lower bound limit for the order expressed as a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    + until (optional, dateTime, `2014-08-31T17:00:00.000Z`) ... Upper bound limit for the order expressed as a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    + limit (optional, number, `100`) ... Specify the total number of results you would like returned per page. Limit 1,000.
    + offset (optional, number, `100`) ... Specify the number of records to offset the results by for paging.
    + contact_id (optional, number, `42`) ... Specify the contact_id you would like to retrieve orders for.
    + product_id (optional, number, `963`) ... Specify the product_id you would like to retrieve orders for.
+ Response 200

    [Orders Collection][] 
  
## Order Creation [/rest/v1/orders]
### Create an Order [POST]

+ Response 201 (application/json)
    [Order][]

## Orders Sync [/rest/v1/orders{?sync_token,limit,offset}]
Sync provides a simple way to retreive an array of order changes since the last time you performed a sync. To perform a sync simply pass the sync token that was returned in a previous GET request as a URL parameter. 

Example:  I want to get all the orders for a specific user for the past 6 months. First make a GET request to /orders with the 'since' and 'until' parameters set to your preferred date range. Infusionsoft will return the orders matching your query along with a sync token on the last page of your results. Now when you want to get a list of orders that have been added, deleted or modified since the sync token was generated simply make another GET request to /orders and pass the 'sync_token' as a parameter.

- **count** - The number of order statuses matching your search parameters
- **next** - The URI for the next page of orders statuses. A null value means there is not a next page. 
- **previous** - The URI for the previous page of order statuses. A null value means there is not a previous page. 
- **sync_token** - Token returned only on the last page of results. Can be used in subsequent calls to the sync endpoint to restrict the result set to tasks that have been updated, created, and deleted since the result set when the sync_token was returned.

+ Model (application/json)

    JSON representation of a Order Status Collection Resource.


    + Body


### Sync for Orders [GET]
The Sync endpoint returns an array of orderStatuses based on orders updated, created, or deleted since the result set when the sync_token was returned.

+ Parameters
    + limit (optional, number, `100`) ... Specify the total number of results you would like returned per page. Limit 1,000.
    + offset (optional, number, `100`) ... Specify the number of records to offset the results by for paging.
    + sync_token (required, string, `MFDLJSDUiFiiuds=`) ... Specify the sync_token from the previous search or sync request to see all tasks updated, created, and deleted since the last request. A sync_token may expire, in which case the server will respond with 410 GONE and the client should perform a full synchronization by searching all orders. Can only be used in conjuction with limit and offset parameters.
+ Response 200

    [Orders Sync][]  

## pay_order [/rest/v1/orders/pay_order]
Provides the ability to make a payment against an existing order -- or a new order -- through an existing merchant account, using a credit card (or token) stored in Infusionsoft.<p>
Only orders paid through Infusionsoft Payments gateway is supported at this time.<p>
This endpoint will pay the remaining balance of the order -- Partial payments are not supported at this time.<p>
To pay an existing order, provide a valid value for 'order_id' in the request body. Otherwise, to place and pay a new order omit 'order_id' and provide a list of order_item.
as a list for 'order_item' int he request body.

`request` parameters:

| Name | Type | Description | Example | Default |
| --- | --- | --- | --- | --- |
| `order_id` | number, optional | The id of the order you wish to make a payment against. If omitted, you must fill the `order_items` parameter, which will create and pay a new order. | { "id" : 1 } ||
| `title` | string, required | A title for the order. |{ "title" : "Super awesome order" }  ||
| `contact_id` | number, required | The id of the contact associated with the order | { "contact_id" : 92 } ||
| `payment_gateway_id` | number, required | The id of the payment gateway account which will process credit card payments | {"payment_gateway_id" : 4} ||
| `payment_method_type` | string, required | The method of payment. Either `cash` or `credit card` | {"payment_method_type" : "credit card" } ||
| `payment_method_id` | number, optional | If payment_method_type is `credit card`, you must provide the tokenized card id, otherwise this can be omitted. | {"payment_method_id" : 937123 } ||
| `note` | string, optional | A note about the payment. | {"note" : "For services rendered" } ||
| `source` | string, optional | The originating device from which the payment is made. Either `Android` or `iOS` are valid values| {"source" : "Android" } | |
| `order_items` | list, optional | If order_id was not provided, a list of `order_item`.| *see order_item resource*||

`order_item` resource

| Name | Type | Description | Example | Default |
| --- | --- | --- | --- | --- |
| `type` | string, required | The type. Valid values: "Tax", "Subscription", "Product", "Discount", "Tip", or "Other" | { "type" : "Product" } ||
| `product_id` | number, optional | The id of the product. Required for "Subscription" and "Product" types. | { "product_id" : 5 } ||
| `subscription_plan_id` | number, optional | The id of the subscription plan. Required for "Subscription" types.| { "subscription_plan_id" : 10 } ||
| `price` | decimal, required | The amount per unit of the item. For "Discount", positive value is required to indicate the amount to remove from the total. | { "price" : 1.50 } ||
| `description` | string, optional | The description of the order item. Applies to "Subscription", "Product", "Discount", and "Other" types, Ignored for all other types. | ("description" : "This is a really cool description."}||
| `name` | string, required | The item name. Required for "Subscription", "Product", and "Other" types. For "Tax" type, it will ovverride the default label, which is "Sales Tax". Ignored for all other types.| { "name" : "Flux Capacitor" } ||
| `quantity` | number, optional | The item quantity purchased. | { "quantity" : 10 } | `1` |

 
 `response` parameters:

| Name | Type | Description |
| --- | --- | --- |
| `success` | boolean | If the payment succeeded.  |
| `failure_reason` | string | If the payment failed, the reason the payment failed. |
| `order` | nested resource (order) | Fully qualified order resource (*see order resource*), when the payment succeeded. If the attempt failed, for any reason, it is possible that the order was still generated. In this case, you may be able to re-attempt the payment against the returned order id. |


### Make a payment [POST]


+ Request (application/json)

        {
            "title": "Purchase throuh REST",
            "contact_id": 4,
            "payment_gateway_id": 235,
            "payment_method_type": "credit card",
            "payment_method_id": 1555331931,
            "note": "Paid via REST API - paid via order items",
            "source": "iOs",
            "order_items":[
                {
                    "type":"Product",
                    "product_id": 1,
                    "price":25.00,
                    "quantity":2,
                    "name":"Test Product from REST",
                    "description":"Color: red text: blah"
                },
                {
                    "type":"Subscription",
                    "product_id": 2,
                    "subscription_plan_id": 1,
                    "price":5.00,
                    "quantity":1,
                    "name":"Test subccription from REST",
                    "description":"blah"
                },
                {
                    "type":"Tax",
                    "price":2.00,
                    "name":"Gimme-tax"
                },
                {
                    "type":"Discount",
                    "description":"10% off order total promo code: SALE",
                    "price":10.00
                }, 
                {
                    "type":"Tip",
                    "price":9.00
                },
                {
                    "type":"Other",
                    "name":"Key Fee",
                    "Description":"How are you going to drive it?",
                    "price":19.00
                }

            ]
        }

+ Response 200

        {
            "success": true,
            "failure_reason: "",
            "order": {
                (*see order resource*)
            }
            
        }


+ Response 200

        {
            "success": false,
            "failure_reason: "The charge was declined",
            "order": {
                (*see `order` resource*)
            }
            
        }
        
## signature [/rest/v1/orders/{order_id}/signature]
Provides the ability to send a signature file.<p>
This is typically used when requiring a shopper to provide a signature to accompany a credit card purchase.

`request` parameters:

| Name | Type | Description | Example | Default |
| --- | --- | --- | --- | --- |
| `file` | multipart, required | The signature file to send. |||

 

### Send a signature [POST]
+ Parameters
    + order_id (string) ... ID of the order.

+ Request (multipart/form-data)

        {
            file: (the file)
        }
            
+ Response 200

        {
            "order": {
                (*see order resource*)
            }
            
        }


# Group Transactions
With the Transactions endpoints you can search transactions  

## Transaction [/rest/v1/transactions/{id}]
A single Transaction object. 

The Transaction endpoint will return the following resources and attributes:

| attribute | type | Description 
| --- | --- | --- 
| `id` | number | `{ "id":12 }` <br>
| `test` | bool | `{ "test":false }` <br> 'True' indicates this was a test transaction. 
| `amount` | double | `{ "amount":100.0 }` <br> The total transaction amount. 
| `currency` | string |  `{ "currency":"USD" }` <br> Currency of the transaction, USD
| `gateway` | string |  `{ "gateway":"AUTHORIZE" }` <br> Payment gateway used for the transaction.
| `type` | string | `{ "type":"CAPTURE" }` <br> The date that the note was created. 
| `status` | string | `{ "status":"Successful Transaction" }` <br> The date that the note was modified. 
| `errors` | double | `{ "errors":null }` <br> The user id to whom the note is asssigned. 
| `contact_id` | int | `{ "id":133 }` <br> The id of the contact associated with this transaction. 
| `transaction_date` | date | `{ "transaction_date":"2013-10-24T14:03:46.000-07:00" }` <br> The date that the transaction took place expressed in iso-8601 datetime. Ex: `2013-10-24T14:03:46.000-07:00`
| `gateway_account_name` | string | `{ "gateway_account_name":"Authorize" }` <br> This is the name you gave the payment gateway in Infusionsoft.
| `order_ids` | string | `{ "order_ids":"6,3" }` <br> A comma delimited list of order ids associated with this transaction. 
| `collection_method` | string | `{ "collection_method":"CollectionMethod" }` <br> Defines whether this transaction was processed via *credit card, Pay Pal or Manually*



+ Parameters
    + id (string) ... ID of the Transaction.

+ Model (application/json)

    JSON representation of a Transaction Resource.


    + Body
    
            {
                "id":22
                "test":false,
                "amount":100.0,
                "currency":"USD",
                "gateway":"AUTHORIZE",
                "type":"CAPTURE",
                "status":"Successful Transaction",
                "errors":null,
                "contact_id":9,
                "transaction_date":"2013-10-24T14:03:46.000-07:00",
                "gateway_account_name":"Authorize",
                "order_ids":"6",
                "collection_method":"Credit Card"
                "url": "https://api.infusionsoft.com/crm/rest/v1/transactions/42"
            }

### Retrieve a Single Transaction [GET]
To retrieve a single transaction simply submit a request to the transaction endpoint with the transaction *id*. 
+ Response 200

    [Transaction][]


## Transactions Collection [/rest/v1/transactions/{?since,until,limit,offset,contact_id}]
The search endpoint returns 3 additional attributes along with an array of transactions:

- **count** - The number of transactions matching your search parameters
- **next** - The URI for the next page of transactions. A null value means there is not a next page. 
- **previous** - The URI for the previous page of transactions. A null value means there is not a previous page. 

+ Model (application/json)

    JSON representation of an Transaction Collection Resource.

    + Headers


    + Body

            {
                "transactions": [
                    {
                        "id": 22,
                        "test": false,
                        "amount": 100,
                        "currency": "USD",
                        "gateway": "AUTHORIZE",
                        "type": "CAPTURE",
                        "status": "Successful Transaction",
                        "errors": null,
                        "contact_id": 9,
                        "transaction_date": "2013-10-24T14:03:46.000-07:00",
                        "gateway_account_name": "Authorize",
                        "order_ids": "6",
                        "collection_method": "Credit Card",
                        "url": "https://api.infusionsoft.com/crm/rest/v1/transactions/42"
                    },
                    {
                        "id": 98,
                        "test": false,
                        "amount": 500,
                        "currency": "USD",
                        "gateway": "AUTHORIZE",
                        "type": "CAPTURE",
                        "status": "Successful Transaction",
                        "errors": null,
                        "contact_id": 33,
                        "transaction_date": "2013-11-04T14:03:46.000-07:00",
                        "gateway_account_name": "Authorize",
                        "order_ids": "54",
                        "collection_method": "Credit Card",
                        "url": "https://api.infusionsoft.com/crm/rest/v1/transactions/434"
                    }
                ],
                "count": 2,
                "next": null,
                "previous": null
            }
            
### List all  Transactions [GET]
The Search endpoint returns an array of transactions matching the search parameters you supplied. All parameters are optional. If your make a call to the search endpoint without passing the *since* or *until* paramenters the endpoint will return all transactions.

+ Parameters
    + since (optional, dateTime, `2014-06-01T17:00:00.000Z`) ... Lower bound limit for the order expressed as a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    + until (optional, dateTime, `2014-08-31T17:00:00.000Z`) ... Upper bound limit for the order expressed as a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    + limit (optional, number, `100`) ... Specify the total number of results you would like returned per page. Limit 1,000.
    + offset (optional, number, `100`) ... Specify the number of records to offset the results by for paging.
    + contact_id (optional, number, `343`) ... Specify the contact_id you would like to return transactions for. 
+ Response 200

    [Transactions Collection][]  

## Transactions Sync [/rest/v1/transactions{?sync_token,limit,offset}]
Sync provides a simple way to retreive an array of changes since the last time you performed a sync. To perform a sync simply pass the sync token that was returned in a previous GET request as a URL parameter. 

Example:  I want to get all the transactions for a specific user for the past 6 months. First make a GET request to /transactions with the 'since' and 'until' parameters set to your preferred date range. Infusionsoft will return the transactions matching your query along with a sync token on the last page of your results. Now when you want to get a list of transactions that have been added, deleted or modified since the sync token was generated simply make another GET request to /transactions and pass the 'sync_token' as a parameter.

- **count** - The number of task statuses matching your search parameters
- **next** - The URI for the next page of transaction statuses. A null value means there is not a next page. 
- **previous** - The URI for the previous page of transaction statuses. A null value means there is not a previous page. 
- **sync_token** - Token returned only on the last page of results. Can be used in subsequent calls to the sync endpoint to restrict the result set to tasks that have been updated, created, and deleted since the result set when the sync_token was returned.

+ Model (application/json)

### Sync for Transactions [GET]
The Sync endpoint returns an array of transactionStatuses based on tasks updated, created, or deleted since the result set when the sync_token was returned.

+ Parameters
    + limit (optional, number, `100`) ... Specify the total number of results you would like returned per page. Limit 1,000.
    + offset (optional, number, `100`) ... Specify the number of records to offset the results by for paging.
    + sync_token (required, string, `MFDLJSDUiFiiuds=`) ... Specify the sync_token from the previous search or sync request to see all transactions updated, created, and deleted since the last request. A sync_token may expire, in which case the server will respond with 410 GONE and the client should perform a full synchronization by searching all transactions. Can only be used in conjuction with limit and offset parameters.
+ Response 200

    [Transactions Sync][]  


  
# Group Merchant Accounts

The Merchant Account endpoints provide the means to query merchant accounts related to their respective endpoint. 

## Resource Merchant Accounts [/merchant_accounts]

### merchant_accounts/{id} [/rest/v1/merchant_accounts/{id}]

A Merchant Account resource will contain the following attributes:

- **id** : (String) A unique identifier for this Merchant Account 
- **name** : (String) The name of the Merchant Account 
- **type** : (String) The Merchant Account type  e.g. DPS, Authorize, Optimal
- **mode** : (Integer) The mode in which the Merchant Account is currently operating: 0 = test mode, -1 = live mode
- **is_order_default** : (Boolean) TRUE if this Merchant Account is set as the default for orders via order forms.
- **is_ecom_default** : (Boolean) TRUE if this Merchant Account is set as the default for orders made through the shopping cart. 
- **url** : (String) The URL to this resource. 


+ Parameters
    + id (string) ... Unique identifier of this merchant account

+ Model (application/json)

    JSON representation of a task permission Resource.

    + Body

            {
                "id": "1",
                "name: "Authorize.NET account",
                "type": "Authorize",
                "mode": 1,
                "is_default": false,
                "url": "https://api.infusionsoft.com/crm/rest/v1/merchant_accounts/1"
            }

#### Retrieve a Single Merchant Account [GET] 
Returns a json representation of the Merchant Account account object identified by _id_.  

+ Request 

        https://api.infusionsoft.com/crm/rest/v1/merchant_accounts/1

+ Response 200

    [merchant_accounts/{id}][]
    
## merchant_accounts/search [/rest/v1/merchant_accounts/search{?limit,offset}]
The search endpoint returns 3 additional attributes along with an array of merchant accounts:

- **count** - (Integer) The number of merchant accountsof results matching your search parameters.
- **next** - (String) The URI for the next page of merchant accounts. A null value means there is not a next page. 
- **previous** - (String) The URI for the previous page of merchant accounts. A null value means there is not a previous page. 

+ Model (application/json)

    JSON representation of an Note Collection Resource.

    + Body

            {
                "count": 2,
                "next": null,
                "previous": null
                "merchant_acounts": [
                    {
                        "id": "1",
                        "name: "Authorize.NET account",
                        "type": "Authorize",
                        "mode": 1,
                        "is_default": false, 
                        "url": "https://api.infusionsoft.com/crm/rest/v1/merchant_accounts/1"
                    },
                    {
                        "id": "3",
                        "name: "My DPS account",
                        "type": "DPS",
                        "mode": 0,
                        "is_default": true, 
                        "url": "https://api.infusionsoft.com/crm/rest/v1/merchant_accounts/3"
                    }
                ]
            }
            
### Search for Merchant Accounts [GET]
The Search endpoint returns an array of merchant accounts matching the search parameters you supplied. All parameters are optional.  

+ Parameters
    + limit (optional, number, `100`) ... Specify the total number of results you would like returned per page. Limit 1,000.
    + offset (optional, number, `100`) ... Specify the number of records to offset the results by for paging.

+ Request
    
         https://api.infusionsoft.com/crm/rest/v1/merchant_accounts/search?limit=10&offset=0

+ Response 200

    [merchant_accounts/search][]    
    



# Group Products
With the Products endpoints, you can look up details for a single product or serach a list of products in Infusionsoft. 

## products/ [/rest/v1/products/{id}]
A single Product object. 

The Product resource:

| Name | Type | Description |
| --- | --- | --- |
| `id` | number | Unique identifier for the product. |
| `product_name` | string | The name of the product. |
| `product_desc` | string | A description of the product. |
| `product_short_desc` | string | A short description of the product. |
| `product_price` | decimal | The price per unit of the product. |
| `sku` | string | The product sku. |
| `sub_category_id` | string | The product sku. |
| `status` | number | Whether the product is active(1) or inactive(0). |
| `subscription_only` | boolean | If the product should be sold only as a subscription and not a one-time product. |
| `url` | string | The URL link to the product resource. |
| `product_options` | nested resource (Option) | Zero to many customizable options the product may have. (e.g color, size, text, etc.) |
| `subscription_plans` | nested resource (Subscription) | If the product is to be sold as a subscription, the list of subscription plans associated to the product.|

The Option nested resource:

| Name | Type | Description |
| --- | --- | --- |
| `id` | number | Unique identifier for the option |
| `name` | string | The name of the option |
| `label` | string | The displayable name of the option |
| `required` | boolean | If this option is required for purchase. |
| `type` | string | The type of option. Valid values are "Variable" or "FixedList". |
| `min_chars` | number | For Variable-type option, the minimum number of characters that must be entered.|
| `max_chars` | number | For Variable-type option, the maximum number of characters that can be entered.|
| `can_start_with_character` | boolean | For Variable-type option, indicates if the text can begin with a character.|
| `can_start_with_number` | boolean | For Variable-type option, indicates if the text can begin with a number (0-9).|
| `can_contain_character` | boolean | For Variable-type option, indicates if the text may contain characters.|
| `can_contain_number` | boolean | For Variable-type option, indicates if the text may contain numbers (0-9).|
| `can_end_with_character` | boolean | For Variable-type option, indicates if the text can end with a character.|
| `can_end_with_number` | boolean | For Variable-type option, indicates if the text can startend with a number (0-9).|
| `allow_spaces` | boolean | For Variable-type option, indicates if apces are allowed in text. |
| `text_message` | string | For Variable-type option, the message to display of the user does not follow the specified rules. |
| `display_index` | number | The display order of this option. Starts at 1. |
| `values` | nested resource (Values) | For FixedList-type option, the list of option values to choose from. |

The Values nested resource:

| Name | Type | Description |
| --- | --- | --- |
| `id` | number | Unique identifier for the option value. |
| `label` | string | The name of the option value. |
| `sku` | string | The sku of this option value. |
| `is_default` | boolean | If this option is selected by default. |
| `index` | number | The order (1 = highest) this value is displayed in the list of values. |
| `price_adjustment` | decimal | The amount to adjust from the product price when this value is chosen. Negative values indicate subtraction from the price. |

The Subscription nested resource:

| Name | Type | Description |
| --- | --- | --- |
| `id` | number | Unique identifier for the subscription plan. |
| `subscription_plan_name` | string | The name of the subscription plan. |
| `cycle` | number | The length of each cycle. (6 = Daily, 3 = Weekly, 2 = Month, 1= Yearly)|
| `frequency` | number | How many times per cycle the subscription should be charged. |
| `number_of_cycles` | number | The total number of cycles this plan has before completion. Zero indicates unlimited cycles.|
| `subscription_plan_index` | number | The order (1 = highest) which this plan is listed for display. |
| `plan_price` | decimal | The cost for each cycle of a subscription. |
| `active` | boolean | Whether or not this subscription plan is active. |

+ Parameters
    + id (required, number, `1`) ... The product's unique identifier.
    

+ Model (application/json)

    JSON representation of a Product Resource.

    + Body
            
            {
                "id" : 1,
                "product_name": "Flux Capacitor",
                "short_description": "Key component required for time travel.",
                "product_price": 5999.99,
                "sku": "FC12GW",
                "subscription_only": false,
                "url": "https://api.infusionsoft.com/crm/rest/v1/products/1",
                "product_options": [ 
                    {
                        "id": 5,
                        "name": "Size",
                        "label": "Size",
                        "required": true,
                        "type": "FixedList",
                        "values": [ 
                            {
                                "id": 10,
                                "sku": "WK123",
                                "name": "Small",
                                "default": true,
                                "index": 1,
                                "price_adjustment": -15.99
                            },
                            {
                                "id": 11,
                                "sku": "WK124",
                                "name": "Large",
                                "default": false,
                                "index": 2,
                                "price_adjustment": 5.00
                            }
                        ]
                    }, 
                    {
                        "id": 15,
                        "name": "Engraving",
                        "required": true,
                        "order": 2,
                        "type": "Variable",
                        "min_chars": 1,
                        "max_chars": 10,
                        "can_end_with_character": false,
                        "can_end_with_number": true,
                        "can_contain_character": true,
                        "can_contain_number": true,
                        "can_start_with_character": true,
                        "can_start_with_number": false,
                        "allow_spaces": false,
                        "text_message" : "You did something wrong. Do it again."
                    }
                ],
                "subscription_plans": [ 
                    {
                        "id": 15,
                        "subscription_plan_name": "Monthly rental, for 12 months",
                        "cycle": 2,
                        "frequency": 1,
                        "number_of_cycles": 12,
                        "plan_price": 999.99,
                        "active": true,
                        "subscription_plan_index": 1
                    }
                ],
            ]

### Get single product details [GET]
This call allows you to look up the details of a single product on Infusionsoft. 

+ Response 200

    [products/][]

## products/search [/rest/v1/products/search{?limit,offset,active}]
Retrieves all products on Infusionsoft based on specific filters. 
Will return an empty array if no products match your specified search criteria. 
Results will be paged, if there are more than the provided limit.

The Product Search resource:

| Name | Type | Description |
| --- | --- | --- |
| `count` | number | The total count of the results of the search. |
| `next` | string | A URL to the next page of results, or NULL if it does not exist. |
| `previous` | string | A URL to the previous page of results, or NULL if it does not exist. |
| `sync_token` | string | An encrypted string which may be used for the sync endpoint. |
| `products` | nested resource (Product) | A list of Product resources (*See products/*) |

+ Model (application/json)

    JSON representation of a Product Search resource.

    + Body

            {
                "products": [
                    {
                     (See Product Model)
                    },
                ],
                "count": 2,
                "next": null,
                "previous": null,
                "sync_token": "MFDLJSDUiFiiuds"
            }
            
### Search for products [GET]

+ Parameters
    + limit: `100` (number, optional) - Limits the results to at most the given value. Necessary for paging.
        + Default: `1000`
    + offset: `5` (number, optional) - The index to where the results should begin. Necessary for paging.
        + Default: `0`
    + active: 'true' (boolean, optional) - Searches for producs which are marked as active.

+ Response 200

    [products/search][]    

## products/sync [/rest/v1/products{?sync_token,limit,offset}]
Sync provides a simple way to retreive an array of product changes since the last time you performed a sync. To perform a sync, pass the sync token that was returned in a previous sync request as a URL parameter. 

Example:  I want to get all the products in my app.
First make a GET request to /products/search.
Infusionsoft will return the products along with a sync token. 
Now when you want to get a list of products that have been added, deleted, or modified since the sync token was generated, simply make another GET request to /products/sync and pass the 'sync_token' as a parameter.

The Product Sync resource:

| Name | Type | Description |
| --- | --- | --- |
| `count` | number | The total count of the results of the search. |
| `next` | string | A URL to the next page of results, or NULL if it does not exist. |
| `previous` | string | A URL to the previous page of results, or NULL if it does not exist. |
| `sync_token` | string | Pass this in as a paremeter to products/sync in order to keep the products information in sync. |
| `product_statuses` | nested resource (Product Status) | A list of statuses. |

The Product Status nested resource:

| Name | Type | Description |
| --- | --- | --- |
| `status` | string | The status opf the product. May be one of: CREATED, UPDATED, or DELETED,  |
| `product` | nested resource (Product) | *See products/* |

+ Model (application/json)

    JSON representation of a Task Status Collection Resource.

    + Body
    
            {
                "product_statuses": [
                    {
                        "status": "DELETED",
                        "product": {
                             (See Product Model)
                        }
                    },
                    {
                        "status": "CREATED",
                        "product": {
                            (See Product Model)
                        }
                    }
                ],
                "count": 2,
                "next": null,
                "previous": null,
                "sync_token": "MFDLJSDUiFiiuds"
            }
            
### Sync Products [GET]
The Sync endpoint returns an array of product statuses based on products updated, created, or deleted since the result set when the sync_token was returned.

+ Parameters
    + sync_token: `MFDLJSDUiFiiuds=` (string, required) - Specify the token from the previous search or sync request to see all products updated, created, and deleted since the last request. 
    A sync_token may expire, in which case the server will respond with 410 GONE and the client should perform a full synchronization by searching all products. 
    + limit: `100` (number, optional) - Limits the results to at most the given value. Necessary for paging.
        + Default: `1000`
    + offset: `5` (number, optional) - The index to where the results should begin. Necessary for paging.
        + Default: `0`

+ Response 200

    [products/sync][]   
